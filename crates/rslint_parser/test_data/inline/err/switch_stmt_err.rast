JsModule {
    interpreter_token: missing (optional),
    directives: JsDirectiveList [],
    items: JsModuleItemList [
        JsUnknownStatement {
            items: [
                SWITCH_KW@0..7 "switch" [] [Whitespace(" ")],
                JsIdentifierExpression {
                    name: JsReferenceIdentifier {
                        value_token: IDENT@7..11 "foo" [] [Whitespace(" ")],
                    },
                },
                L_CURLY@11..12 "{" [] [],
                JsSwitchCaseList [],
                R_CURLY@12..13 "}" [] [],
            ],
        },
        JsUnknownStatement {
            items: [
                SWITCH_KW@13..21 "switch" [Whitespace("\n")] [Whitespace(" ")],
                L_CURLY@21..22 "{" [] [],
                JsSwitchCaseList [],
                R_CURLY@22..23 "}" [] [],
            ],
        },
        JsUnknownStatement {
            items: [
                SWITCH_KW@23..31 "switch" [Whitespace("\n")] [Whitespace(" ")],
                L_CURLY@31..33 "{" [] [Whitespace(" ")],
                JsUnknown {
                    items: [
                        JsUnknown {
                            items: [
                                JsStatementList [
                                    JsUnknownStatement {
                                        items: [
                                            VAR_KW@33..37 "var" [] [Whitespace(" ")],
                                            IDENT@37..39 "i" [] [Whitespace(" ")],
                                            EQ@39..41 "=" [] [Whitespace(" ")],
                                            JS_NUMBER_LITERAL@41..43 "0" [] [Whitespace(" ")],
                                        ],
                                    },
                                ],
                            ],
                        },
                    ],
                },
                R_CURLY@43..44 "}" [] [],
            ],
        },
        JsUnknownStatement {
            items: [
                SWITCH_KW@44..52 "switch" [Whitespace("\n")] [Whitespace(" ")],
                L_CURLY@52..54 "{" [] [Whitespace(" ")],
                JsUnknown {
                    items: [
                        JsUnknown {
                            items: [
                                JsStatementList [
                                    JsUnknownStatement {
                                        items: [
                                            VAR_KW@54..58 "var" [] [Whitespace(" ")],
                                            IDENT@58..60 "i" [] [Whitespace(" ")],
                                            EQ@60..62 "=" [] [Whitespace(" ")],
                                            JS_NUMBER_LITERAL@62..63 "0" [] [],
                                            SEMICOLON@63..65 ";" [] [Whitespace(" ")],
                                        ],
                                    },
                                ],
                            ],
                        },
                        JsCaseClause {
                            case_token: CASE_KW@65..70 "case" [] [Whitespace(" ")],
                            test: JsStringLiteralExpression {
                                value_token: JS_STRING_LITERAL@70..75 "\"bar\"" [] [],
                            },
                            colon_token: COLON@75..77 ":" [] [Whitespace(" ")],
                            consequent: JsStatementList [
                                JsBlockStatement {
                                    l_curly_token: L_CURLY@77..78 "{" [] [],
                                    statements: JsStatementList [],
                                    r_curly_token: R_CURLY@78..80 "}" [] [Whitespace(" ")],
                                },
                            ],
                        },
                    ],
                },
                R_CURLY@80..81 "}" [] [],
            ],
        },
        JsUnknownStatement {
            items: [
                SWITCH_KW@81..89 "switch" [Whitespace("\n")] [Whitespace(" ")],
                L_PAREN@89..90 "(" [] [],
                JsIdentifierExpression {
                    name: JsReferenceIdentifier {
                        value_token: IDENT@90..93 "foo" [] [],
                    },
                },
                R_PAREN@93..95 ")" [] [Whitespace(" ")],
                L_CURLY@95..96 "{" [] [],
                JsUnknown {
                    items: [
                        JsDefaultClause {
                            default_token: DEFAULT_KW@96..105 "default" [Whitespace("\n\t")] [],
                            colon_token: COLON@105..107 ":" [] [Whitespace(" ")],
                            consequent: JsStatementList [
                                JsBlockStatement {
                                    l_curly_token: L_CURLY@107..108 "{" [] [],
                                    statements: JsStatementList [],
                                    r_curly_token: R_CURLY@108..109 "}" [] [],
                                },
                            ],
                        },
                        JsUnknown {
                            items: [
                                JsUnknownExpression {
                                    items: [
                                        DEFAULT_KW@109..118 "default" [Whitespace("\n\t")] [],
                                    ],
                                },
                                COLON@118..120 ":" [] [Whitespace(" ")],
                                JsStatementList [
                                    JsBlockStatement {
                                        l_curly_token: L_CURLY@120..121 "{" [] [],
                                        statements: JsStatementList [],
                                        r_curly_token: R_CURLY@121..122 "}" [] [],
                                    },
                                ],
                            ],
                        },
                    ],
                },
                R_CURLY@122..124 "}" [Whitespace("\n")] [],
            ],
        },
    ],
    eof_token: EOF@124..125 "" [Whitespace("\n")] [],
}

0: JS_MODULE@0..125
  0: (empty)
  1: JS_DIRECTIVE_LIST@0..0
  2: JS_MODULE_ITEM_LIST@0..124
    0: JS_UNKNOWN_STATEMENT@0..13
      0: SWITCH_KW@0..7 "switch" [] [Whitespace(" ")]
      1: JS_IDENTIFIER_EXPRESSION@7..11
        0: JS_REFERENCE_IDENTIFIER@7..11
          0: IDENT@7..11 "foo" [] [Whitespace(" ")]
      2: L_CURLY@11..12 "{" [] []
      3: JS_SWITCH_CASE_LIST@12..12
      4: R_CURLY@12..13 "}" [] []
    1: JS_UNKNOWN_STATEMENT@13..23
      0: SWITCH_KW@13..21 "switch" [Whitespace("\n")] [Whitespace(" ")]
      1: L_CURLY@21..22 "{" [] []
      2: JS_SWITCH_CASE_LIST@22..22
      3: R_CURLY@22..23 "}" [] []
    2: JS_UNKNOWN_STATEMENT@23..44
      0: SWITCH_KW@23..31 "switch" [Whitespace("\n")] [Whitespace(" ")]
      1: L_CURLY@31..33 "{" [] [Whitespace(" ")]
      2: JS_UNKNOWN@33..43
        0: JS_UNKNOWN@33..43
          0: JS_STATEMENT_LIST@33..43
            0: JS_UNKNOWN_STATEMENT@33..43
              0: VAR_KW@33..37 "var" [] [Whitespace(" ")]
              1: IDENT@37..39 "i" [] [Whitespace(" ")]
              2: EQ@39..41 "=" [] [Whitespace(" ")]
              3: JS_NUMBER_LITERAL@41..43 "0" [] [Whitespace(" ")]
      3: R_CURLY@43..44 "}" [] []
    3: JS_UNKNOWN_STATEMENT@44..81
      0: SWITCH_KW@44..52 "switch" [Whitespace("\n")] [Whitespace(" ")]
      1: L_CURLY@52..54 "{" [] [Whitespace(" ")]
      2: JS_UNKNOWN@54..80
        0: JS_UNKNOWN@54..65
          0: JS_STATEMENT_LIST@54..65
            0: JS_UNKNOWN_STATEMENT@54..65
              0: VAR_KW@54..58 "var" [] [Whitespace(" ")]
              1: IDENT@58..60 "i" [] [Whitespace(" ")]
              2: EQ@60..62 "=" [] [Whitespace(" ")]
              3: JS_NUMBER_LITERAL@62..63 "0" [] []
              4: SEMICOLON@63..65 ";" [] [Whitespace(" ")]
        1: JS_CASE_CLAUSE@65..80
          0: CASE_KW@65..70 "case" [] [Whitespace(" ")]
          1: JS_STRING_LITERAL_EXPRESSION@70..75
            0: JS_STRING_LITERAL@70..75 "\"bar\"" [] []
          2: COLON@75..77 ":" [] [Whitespace(" ")]
          3: JS_STATEMENT_LIST@77..80
            0: JS_BLOCK_STATEMENT@77..80
              0: L_CURLY@77..78 "{" [] []
              1: JS_STATEMENT_LIST@78..78
              2: R_CURLY@78..80 "}" [] [Whitespace(" ")]
      3: R_CURLY@80..81 "}" [] []
    4: JS_UNKNOWN_STATEMENT@81..124
      0: SWITCH_KW@81..89 "switch" [Whitespace("\n")] [Whitespace(" ")]
      1: L_PAREN@89..90 "(" [] []
      2: JS_IDENTIFIER_EXPRESSION@90..93
        0: JS_REFERENCE_IDENTIFIER@90..93
          0: IDENT@90..93 "foo" [] []
      3: R_PAREN@93..95 ")" [] [Whitespace(" ")]
      4: L_CURLY@95..96 "{" [] []
      5: JS_UNKNOWN@96..122
        0: JS_DEFAULT_CLAUSE@96..109
          0: DEFAULT_KW@96..105 "default" [Whitespace("\n\t")] []
          1: COLON@105..107 ":" [] [Whitespace(" ")]
          2: JS_STATEMENT_LIST@107..109
            0: JS_BLOCK_STATEMENT@107..109
              0: L_CURLY@107..108 "{" [] []
              1: JS_STATEMENT_LIST@108..108
              2: R_CURLY@108..109 "}" [] []
        1: JS_UNKNOWN@109..122
          0: JS_UNKNOWN_EXPRESSION@109..118
            0: DEFAULT_KW@109..118 "default" [Whitespace("\n\t")] []
          1: COLON@118..120 ":" [] [Whitespace(" ")]
          2: JS_STATEMENT_LIST@120..122
            0: JS_BLOCK_STATEMENT@120..122
              0: L_CURLY@120..121 "{" [] []
              1: JS_STATEMENT_LIST@121..121
              2: R_CURLY@121..122 "}" [] []
      6: R_CURLY@122..124 "}" [Whitespace("\n")] []
  3: EOF@124..125 "" [Whitespace("\n")] []
--
error[SyntaxError]: expected `'('` but instead found `foo`
  ┌─ switch_stmt_err.js:1:8
  │
1 │ switch foo {}
  │        ^^^ unexpected

--
error[SyntaxError]: expected `')'` but instead found `{`
  ┌─ switch_stmt_err.js:1:12
  │
1 │ switch foo {}
  │            ^ unexpected

--
error[SyntaxError]: expected `'('` but instead found `{`
  ┌─ switch_stmt_err.js:2:8
  │
2 │ switch {}
  │        ^ unexpected

--
error[SyntaxError]: expected `'('` but instead found `{`
  ┌─ switch_stmt_err.js:3:8
  │
3 │ switch { var i = 0 }
  │        ^ unexpected

--
error[SyntaxError]: expected a default, or a case but instead found 'var i = 0'
  ┌─ switch_stmt_err.js:3:10
  │
3 │ switch { var i = 0 }
  │          ^^^^^^^^^ Expected a default, or a case here

--
error[SyntaxError]: expected `'('` but instead found `{`
  ┌─ switch_stmt_err.js:4:8
  │
4 │ switch { var i = 0; case "bar": {} }
  │        ^ unexpected

--
error[SyntaxError]: expected a default, or a case but instead found 'var i = 0;'
  ┌─ switch_stmt_err.js:4:10
  │
4 │ switch { var i = 0; case "bar": {} }
  │          ^^^^^^^^^^ Expected a default, or a case here

--
error[SyntaxError]: Multiple default clauses inside of a switch statement are not allowed
  ┌─ switch_stmt_err.js:7:2
  │
6 │     default: {}
  │     ----------- the first default clause is defined here
7 │     default: {}
  │     ^^^^^^^^^^^ a second clause here is not allowed

--
switch foo {}
switch {}
switch { var i = 0 }
switch { var i = 0; case "bar": {} }
switch (foo) {
	default: {}
	default: {}
}
